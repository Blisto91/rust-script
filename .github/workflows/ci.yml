name: CI

on: push

jobs:

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Setup rust
      uses: hecrj/setup-rust-action@v1
    - name: Run unit tests
      run: cargo test
    - name: Run script tests
      if: runner.os != 'Windows'
      run: |
        # Run twice to test problem with expression caching
        ./tests/scripts/test-runner.sh
        ./tests/scripts/test-runner.sh
    - name: Check for unsafe code
      if: runner.os != 'Windows'
      run: RUSTFLAGS="-Funsafe-code" cargo check

  check-format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Setup rust
      uses: hecrj/setup-rust-action@v1
    - name: Install rustfmt
      run: rustup component add rustfmt
    - name: Check formatting with rustfmt
      run: cargo fmt -- --check

  check-clippy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Setup rust
      uses: hecrj/setup-rust-action@v1
    - name: Install rustfmt
      run: rustup component add clippy
    - name: Check for clippy warnings
      run: cargo clippy --all-targets --all-features -- -D warnings -W clippy::cargo

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
